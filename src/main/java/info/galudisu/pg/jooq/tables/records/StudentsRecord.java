/*
 * This file is generated by jOOQ.
 */
package info.galudisu.pg.jooq.tables.records;


import info.galudisu.pg.jooq.tables.Students;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentsRecord extends UpdatableRecordImpl<StudentsRecord> implements Record3<Integer, String, Integer> {

    private static final long serialVersionUID = 1322101817;

    /**
     * Setter for <code>public.students.s_id</code>.
     */
    public void setSId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.students.s_id</code>.
     */
    public Integer getSId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.students.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.students.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.students.start_year</code>.
     */
    public void setStartYear(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.students.start_year</code>.
     */
    public Integer getStartYear() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, String, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Students.STUDENTS.S_ID;
    }

    @Override
    public Field<String> field2() {
        return Students.STUDENTS.NAME;
    }

    @Override
    public Field<Integer> field3() {
        return Students.STUDENTS.START_YEAR;
    }

    @Override
    public Integer component1() {
        return getSId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Integer component3() {
        return getStartYear();
    }

    @Override
    public Integer value1() {
        return getSId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Integer value3() {
        return getStartYear();
    }

    @Override
    public StudentsRecord value1(Integer value) {
        setSId(value);
        return this;
    }

    @Override
    public StudentsRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public StudentsRecord value3(Integer value) {
        setStartYear(value);
        return this;
    }

    @Override
    public StudentsRecord values(Integer value1, String value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StudentsRecord
     */
    public StudentsRecord() {
        super(Students.STUDENTS);
    }

    /**
     * Create a detached, initialised StudentsRecord
     */
    public StudentsRecord(Integer sId, String name, Integer startYear) {
        super(Students.STUDENTS);

        set(0, sId);
        set(1, name);
        set(2, startYear);
    }
}
