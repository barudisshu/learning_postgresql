/*
 * This file is generated by jOOQ.
 */
package info.galudisu.pg.jooq.tables.daos;


import info.galudisu.pg.jooq.tables.Students;
import info.galudisu.pg.jooq.tables.records.StudentsRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentsDao extends DAOImpl<StudentsRecord, info.galudisu.pg.jooq.tables.pojos.Students, Integer> {

    /**
     * Create a new StudentsDao without any configuration
     */
    public StudentsDao() {
        super(Students.STUDENTS, info.galudisu.pg.jooq.tables.pojos.Students.class);
    }

    /**
     * Create a new StudentsDao with an attached configuration
     */
    public StudentsDao(Configuration configuration) {
        super(Students.STUDENTS, info.galudisu.pg.jooq.tables.pojos.Students.class, configuration);
    }

    @Override
    public Integer getId(info.galudisu.pg.jooq.tables.pojos.Students object) {
        return object.getSId();
    }

    /**
     * Fetch records that have <code>s_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<info.galudisu.pg.jooq.tables.pojos.Students> fetchRangeOfSId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Students.STUDENTS.S_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>s_id IN (values)</code>
     */
    public List<info.galudisu.pg.jooq.tables.pojos.Students> fetchBySId(Integer... values) {
        return fetch(Students.STUDENTS.S_ID, values);
    }

    /**
     * Fetch a unique record that has <code>s_id = value</code>
     */
    public info.galudisu.pg.jooq.tables.pojos.Students fetchOneBySId(Integer value) {
        return fetchOne(Students.STUDENTS.S_ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<info.galudisu.pg.jooq.tables.pojos.Students> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Students.STUDENTS.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<info.galudisu.pg.jooq.tables.pojos.Students> fetchByName(String... values) {
        return fetch(Students.STUDENTS.NAME, values);
    }

    /**
     * Fetch records that have <code>start_year BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<info.galudisu.pg.jooq.tables.pojos.Students> fetchRangeOfStartYear(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Students.STUDENTS.START_YEAR, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>start_year IN (values)</code>
     */
    public List<info.galudisu.pg.jooq.tables.pojos.Students> fetchByStartYear(Integer... values) {
        return fetch(Students.STUDENTS.START_YEAR, values);
    }
}
