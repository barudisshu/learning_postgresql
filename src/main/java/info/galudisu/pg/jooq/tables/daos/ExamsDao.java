/*
 * This file is generated by jOOQ.
 */
package info.galudisu.pg.jooq.tables.daos;


import info.galudisu.pg.jooq.tables.Exams;
import info.galudisu.pg.jooq.tables.records.ExamsRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExamsDao extends DAOImpl<ExamsRecord, info.galudisu.pg.jooq.tables.pojos.Exams, Record2<Integer, String>> {

    /**
     * Create a new ExamsDao without any configuration
     */
    public ExamsDao() {
        super(Exams.EXAMS, info.galudisu.pg.jooq.tables.pojos.Exams.class);
    }

    /**
     * Create a new ExamsDao with an attached configuration
     */
    public ExamsDao(Configuration configuration) {
        super(Exams.EXAMS, info.galudisu.pg.jooq.tables.pojos.Exams.class, configuration);
    }

    @Override
    public Record2<Integer, String> getId(info.galudisu.pg.jooq.tables.pojos.Exams object) {
        return compositeKeyRecord(object.getSId(), object.getCNo());
    }

    /**
     * Fetch records that have <code>s_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<info.galudisu.pg.jooq.tables.pojos.Exams> fetchRangeOfSId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Exams.EXAMS.S_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>s_id IN (values)</code>
     */
    public List<info.galudisu.pg.jooq.tables.pojos.Exams> fetchBySId(Integer... values) {
        return fetch(Exams.EXAMS.S_ID, values);
    }

    /**
     * Fetch records that have <code>c_no BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<info.galudisu.pg.jooq.tables.pojos.Exams> fetchRangeOfCNo(String lowerInclusive, String upperInclusive) {
        return fetchRange(Exams.EXAMS.C_NO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>c_no IN (values)</code>
     */
    public List<info.galudisu.pg.jooq.tables.pojos.Exams> fetchByCNo(String... values) {
        return fetch(Exams.EXAMS.C_NO, values);
    }

    /**
     * Fetch records that have <code>score BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<info.galudisu.pg.jooq.tables.pojos.Exams> fetchRangeOfScore(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Exams.EXAMS.SCORE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>score IN (values)</code>
     */
    public List<info.galudisu.pg.jooq.tables.pojos.Exams> fetchByScore(Integer... values) {
        return fetch(Exams.EXAMS.SCORE, values);
    }
}
